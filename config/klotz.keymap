
//                                      █         ██        ▄▀▀▀▀▀▀▀▀▀▀█▀▀▀▀▀▀▀▀█▀▀▀▀▀▀▀▀▀▀█
//                                      █        █ █      ▄▀            ▀▄      █         █
//                                      █       █  █    ▄▀                ▀▄    █        █
//                                      █      █   █   █                    █   █       █
//                                      █     █    █   █                    █   █      █
//                                      █    █     █   █                    █   █  ▀▀▀█▀▀▀▀
//                                      █   █ █    █   █                    █   █    █
//                                      █  █   █   █   █                    █   █   █
//                                      █ █     █  █    ▀▄                ▄▀    █  █
//                                      ██       █ █      ▀▄            ▄▀      █ █
//                                      █         ██▄▄▄▄▄▄▄▄█▄▄▄▄▄▄▄▄▄▄▀        ██▄▄▄▄▄▄▄▄▄▄
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define L_QWERTY 0
#define L_NUMSYM 1
#define L_NAV 2
#define L_FKEYS 3
#define L_BLE 4
#define L_MM 5

&mt {
    tapping_term_ms = <150>;
    flavor = "tap-preferred";
};

&lt {
    tapping_term_ms = <150>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS BACKSPACE>;
};

&sk {
    release-after-ms = <1000>;
    quick-release;
    /delete-property/ ignore-modifiers;
};

/ {
    behaviors {
        hml: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <150>;
            global-quick-tap;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29>;
        };
        hmls: homerow_mods_left_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <90>;
            quick-tap-ms = <150>;
            global-quick-tap;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29>;
        };
        hmla: homerow_mods_left_altgr {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_LEFT_ALTGR";
            #binding-cells = <2>;
            tapping-term-ms = <140>;
            quick-tap-ms = <150>;
            global-quick-tap;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29>;
        };
        hmr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <150>;
            global-quick-tap;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24>;
        };
        hmrs: homerow_mods_right_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_SHIFT";
            #binding-cells = <2>;
            tapping-term-ms = <90>;
            quick-tap-ms = <150>;
            global-quick-tap;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24>;
        };
        hmra: homerow_mods_right_altgr {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS_RIGHT_ALTGR";
            #binding-cells = <2>;
            tapping-term-ms = <140>;
            quick-tap-ms = <150>;
            global-quick-tap;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_sticky_shift_left {
            timeout-ms = <30>;
            key-positions = <11 12>;
            bindings = <&sk LSHIFT>;
        };
        combo_sticky_shift_right {
            timeout-ms = <30>;
            key-positions = <17 18>;
            bindings = <&sk RSHIFT>;
        };
        combo_sticky_altgr_left {
            timeout-ms = <30>;
            key-positions = <10 11>;
            bindings = <&sk RALT>;
        };
        combo_sticky_altggr_right {
            timeout-ms = <30>;
            key-positions = <18 19>;
            bindings = <&sk RALT>;
        };
        combo_copy {
            timeout-ms = <30>;
            key-positions = <20 22>;
            bindings = <&kp LC(C)>;
        };
        combo_cut {
            timeout-ms = <30>;
            key-positions = <20 21>;
            bindings = <&kp LC(X)>;
        };
        combo_paste {
            timeout-ms = <30>;
            key-positions = <21 22>;
            bindings = <&kp LC(V)>;
        };
        combo_tab {
            timeout-ms = <30>;
            key-positions = <1 3>;
            bindings = <&kp TAB>;
        };
        combo_esc {
            timeout-ms = <30>;
            key-positions = <1 2 3>;
            bindings = <&kp ESC>;
        };
        combo_reset_left {
            timeout-ms = <30>;
            key-positions = <0 1 2 3>;
            bindings = <&reset>;
        };
        /*combo_bootloader_left {*/
            /*timeout-ms = <30>;*/
            /*key-positions = <20 21 22 23>;*/
            /*bindings = <&bootloader>;*/
        /*};*/
        combo_reset_right {
            timeout-ms = <30>;
            key-positions = <6 7 8 9>;
            bindings = <&reset>;
        };
        /*combo_bootloader_right {*/
            /*timeout-ms = <30>;*/
            /*key-positions = <26 27 28 29>;*/
            /*bindings = <&bootloader>;*/
        /*};*/
        combo_vm_exit {
            timeout-ms = <50>;
            key-positions = <10 11 12 13>;
            bindings = <&kp K_APPLICATION>;
        };
        combo_minus {
            timeout-ms = <30>;
            key-positions = <6 7>;
            bindings = <&kp MINUS>;
        };
        combo_equals {
            timeout-ms = <30>;
            key-positions = <7 8>;
            bindings = <&kp EQUAL>;
        };
        combo_underscore {
            timeout-ms = <30>;
            key-positions = <26 27>;
            bindings = <&kp UNDERSCORE>;
        };
        combo_double_quotes {
            timeout-ms = <30>;
            key-positions = <1 2>;
            bindings = <&kp DOUBLE_QUOTES>;
        };
        combo_single_quote {
            timeout-ms = <30>;
            key-positions = <2 3>;
            bindings = <&kp SINGLE_QUOTE>;
        };
        combo_backtick {
            timeout-ms = <30>;
            key-positions = <22 23>;
            bindings = <&kp GRAVE>;
        };
        combo_excl {
            timeout-ms = <30>;
            key-positions = <27 28>;
            bindings = <&kp EXCLAMATION>;
        };
        combo_pipe {
            timeout-ms = <30>;
            key-positions = <26 27 28>;
            bindings = <&kp PIPE>;
        };
        combo_backslash {
            timeout-ms = <30>;
            key-positions = <28 29>;
            bindings = <&kp BACKSLASH>;
        };
        combo_delete {
            timeout-ms = <30>;
            key-positions = <12 13>;
            bindings = <&kp DELETE>;
        };
        combo_enter {
            timeout-ms = <30>;
            key-positions = <16 17>;
            bindings = <&kp ENTER>;
        };
        combo_capslock {
            timeout-ms = <30>;
            key-positions = <6 7 8>;
            bindings = <&caps_word>;
        };
        combo_fkeys {
            timeout-ms = <30>;
            key-positions = <20 21 22>;
            bindings = <&sl L_FKEYS>;
        };
    };

    /*
    // Numbers:
    //  0  1  2  3  4   |    5  6  7  8  9
    // 10 11 12 13 14   |   15 16 17 18 19
    // 20 21 22 23 24   |   25 26 27 28 29
    //          30 31   |   32 33
    */

    keymap {
        compatible = "zmk,keymap";
        0_querty {
            bindings = <
    &lt L_MM Q       &kp W       &kp E           &kp R           &kp T       &kp Y   &kp U           &kp I           &kp O       &kp P
    &hml LALT A &hml LGUI S &hmls LSHIFT D   &hml LCTRL F    &kp G       &kp H   &hmr RCTRL J    &hmrs RSHFT K    &hmr RGUI L &hmr LALT SEMICOLON
    &kp Z       &kp X       &kp C           &hmla RALT V     &kp B       &kp N   &hmra RALT M     &kp COMMA       &kp DOT     &kp SLASH
                            &lt L_FKEYS SPC  &lt L_NUMSYM SPC           &lt L_NAV BSPC  &lt L_BLE BSPC
            >;
        };

        1_numsym {
            bindings = <
    &kp N1      &kp N2      &kp N3      &kp N4      &kp N5          &kp COMMA   &kp N7       &kp N8     &kp N9      &kp N0
    &kp LPAR    &kp LBKT    &kp RBKT    &kp RPAR    &none           &kp MINUS   &kp N4       &kp N5     &kp N6      &kp PLUS
    &kp LBRC    &kp LT      &kp GT      &kp RBRC    &none           &kp DOT     &kp N1       &kp N2     &kp N3      &kp SLASH
                                        &none       &none           &kp N0      &none
            >;
        };

        2_nav {
            bindings = <
    &kp EXCL    &kp AT      &kp HASH    &kp DOLLAR  &kp PRCNT       &kp CARET   &kp AMPS    &kp ASTRK   &none       &none
    &kp LC(LG(LEFT)) &kp LS(LG(LEFT)) &kp LS(LG(RIGHT)) &kp LC(LG(RIGHT)) &none     &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &none
    &kp LG(LEFT)     &kp LS(LC(TAB))  &kp LC(TAB)   &kp LG(RIGHT)   &kp LA(TAB)     &kp HOME    &kp PG_DN   &kp PG_UP   &kp END     &none
                                        &none       &none           &none       &none
            >;
        };

        3_fkeys {
            bindings = <
    &none       &none       &none       &none       &reset          &none   &kp F7  &kp F8  &kp F9  &kp F12
    &sk LEFT_ALT &sk LEFT_GUI &sk LEFT_SHIFT &sk LEFT_CONTROL &bootloader   &none   &kp F4  &kp F5  &kp F8  &kp F11
    &none       &none       &none       &none       &none           &none   &kp F1  &kp F2  &kp F3  &kp F10
                                        &none       &none           &none   &none
            >;
        };

        4_ble {
            bindings = <
    &kp C_MUTE      &none           &kp C_VOL_DN    &kp C_VOL_UP    &bt BT_CLR      &reset        &none   &none   &none   &none
    &bt BT_SEL 4    &bt BT_SEL 3    &bt BT_SEL 2    &bt BT_SEL 1    &bt BT_SEL 0    &bootloader   &none   &none   &none   &none
    &none           &none           &none           &out OUT_USB    &none           &none         &none   &none   &none   &none
                                                    &none           &none           &none         &none
            >;
        };

        5_multimedia {
            bindings = <
    &none           &kp C_MUTE      &kp C_VOL_DN    &kp C_VOL_UP    &none           &none         &none   &none   &none   &none
    &none           &none           &none           &none           &none           &none         &none   &none   &none   &none
    &none           &none           &none           &none           &none           &none         &none   &none   &none   &none
                                                    &none           &none           &none         &none
            >;
        };

    };
};
